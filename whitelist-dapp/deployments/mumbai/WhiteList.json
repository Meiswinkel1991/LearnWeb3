{
  "address": "0x13f5E500E7Db670768Dd8daD61314C51A4081474",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_maxWhitelistedAddresses",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "WhiteList__AlreadyWhitelisted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "WhiteList__MaxNumberWhitelistedReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "addAddressToWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxWhitelistedAddresses",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numAddressesWhitelisted",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelistedAddresses",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x8ae1720f61ea9e73b66907f70efebe5a5f6422b2905a24c371f0001a5805839e",
  "receipt": {
    "to": null,
    "from": "0xACa69e4F81380214BEd41ca6761bA3959A2c2a56",
    "contractAddress": "0x13f5E500E7Db670768Dd8daD61314C51A4081474",
    "transactionIndex": 30,
    "gasUsed": "302347",
    "logsBloom": "0x
    "blockHash": "0x16338c57ad083e8c4b5467231d36f838a460faaa0c54b280e5261b0405b48ea8",
    "transactionHash": "0x8ae1720f61ea9e73b66907f70efebe5a5f6422b2905a24c371f0001a5805839e",
    "logs": [
      {
        "transactionIndex": 30,
        "blockNumber": 27944588,
        "transactionHash": "0x8ae1720f61ea9e73b66907f70efebe5a5f6422b2905a24c371f0001a5805839e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000aca69e4f81380214bed41ca6761ba3959a2c2a56",
          "0x000000000000000000000000c275dc8be39f50d12f66b6a63629c39da5bae5bd"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000019c797d94c297000000000000000000000000000000000000000000000000010abdbc890a39610000000000000000000000000000000000000000000008ceefb0dc03731c9b99000000000000000000000000000000000000000000000000010921430b7576ca0000000000000000000000000000000000000000000008ceefb2787cf0b15e30",
        "logIndex": 247,
        "blockHash": "0x16338c57ad083e8c4b5467231d36f838a460faaa0c54b280e5261b0405b48ea8"
      }
    ],
    "blockNumber": 27944588,
    "cumulativeGasUsed": "7677176",
    "status": 1,
    "byzantium": true
  },
  "args": [
    10
  ],
  "numDeployments": 1,
  "solcInputHash": "21d44aaf09f83112b076906e44ffd0ff",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_maxWhitelistedAddresses\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WhiteList__AlreadyWhitelisted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WhiteList__MaxNumberWhitelistedReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"addAddressToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxWhitelistedAddresses\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numAddressesWhitelisted\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelistedAddresses\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addAddressToWhitelist()\":{\"details\":\"- this function add the address of the sender to the whitelist\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/WhiteList.sol\":\"WhiteList\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/WhiteList.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nerror WhiteList__AlreadyWhitelisted();\\nerror WhiteList__MaxNumberWhitelistedReached();\\n\\ncontract WhiteList {\\n    // max number of whitelisted addresses allowed\\n    uint8 public maxWhitelistedAddresses;\\n\\n    //Create a mapping of whitelistedAddresses\\n    //if an address is whitelisted, we would set it to true, it is false by default for all other addresses\\n    mapping(address => bool) public whitelistedAddresses;\\n\\n    //numAddressesWhitelisted would be used to keep track of how many addresses have been whitelisted\\n    // NOTE: Don't change this variable name, as it will be part of verification\\n    uint8 public numAddressesWhitelisted;\\n\\n    //Setting the max number of whitelisted addresses\\n    //user will put the value at the time of deployment\\n    constructor(uint8 _maxWhitelistedAddresses) {\\n        maxWhitelistedAddresses = _maxWhitelistedAddresses;\\n    }\\n\\n    /**\\n     *  @dev - this function add the address of the sender to the whitelist\\n     */\\n    function addAddressToWhitelist() public {\\n        //check if the user has already been whitelisted\\n        if (whitelistedAddresses[msg.sender]) {\\n            revert WhiteList__AlreadyWhitelisted();\\n        }\\n        //check if the numAddressesWhitelisted < maxWhitelistedAddresses, if not throw an error\\n        if (numAddressesWhitelisted >= maxWhitelistedAddresses) {\\n            revert WhiteList__MaxNumberWhitelistedReached();\\n        }\\n\\n        //Add the address which called the function to the whitelistedAddress array\\n        whitelistedAddresses[msg.sender] = true;\\n        //Increase the number of whitelisted addresses\\n        numAddressesWhitelisted += 1;\\n    }\\n}\\n\",\"keccak256\":\"0xcbf86b926865bde0223ff5e651eb1274ab83024b1f3f51e5c94cee4d1d4fea09\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104df3803806104df83398181016040528101906100329190610090565b806000806101000a81548160ff021916908360ff160217905550506100bd565b600080fd5b600060ff82169050919050565b61006d81610057565b811461007857600080fd5b50565b60008151905061008a81610064565b92915050565b6000602082840312156100a6576100a5610052565b5b60006100b48482850161007b565b91505092915050565b610413806100cc6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c933d81461005157806331a72188146100815780634011d7cd1461009f5780638e7314d9146100bd575b600080fd5b61006b600480360381019061006691906102dd565b6100c7565b6040516100789190610325565b60405180910390f35b6100896100e7565b604051610096919061035c565b60405180910390f35b6100a76100f8565b6040516100b4919061035c565b60405180910390f35b6100c561010b565b005b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900460ff1681565b600260009054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018f576040517feae105b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900460ff1660ff16600260009054906101000a900460ff1660ff16106101ea576040517f7cf5854800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008282829054906101000a900460ff1661026091906103a6565b92506101000a81548160ff021916908360ff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102aa8261027f565b9050919050565b6102ba8161029f565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b6000602082840312156102f3576102f261027a565b5b6000610301848285016102c8565b91505092915050565b60008115159050919050565b61031f8161030a565b82525050565b600060208201905061033a6000830184610316565b92915050565b600060ff82169050919050565b61035681610340565b82525050565b6000602082019050610371600083018461034d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103b182610340565b91506103bc83610340565b92508260ff038211156103d2576103d1610377565b5b82820190509291505056fea2646970667358221220b25af33852675f0f7d00746ccb2e5b8fef29392125b6da0a9214a42117049cf864736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806306c933d81461005157806331a72188146100815780634011d7cd1461009f5780638e7314d9146100bd575b600080fd5b61006b600480360381019061006691906102dd565b6100c7565b6040516100789190610325565b60405180910390f35b6100896100e7565b604051610096919061035c565b60405180910390f35b6100a76100f8565b6040516100b4919061035c565b60405180910390f35b6100c561010b565b005b60016020528060005260406000206000915054906101000a900460ff1681565b60008054906101000a900460ff1681565b600260009054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018f576040517feae105b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900460ff1660ff16600260009054906101000a900460ff1660ff16106101ea576040517f7cf5854800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600260008282829054906101000a900460ff1661026091906103a6565b92506101000a81548160ff021916908360ff160217905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102aa8261027f565b9050919050565b6102ba8161029f565b81146102c557600080fd5b50565b6000813590506102d7816102b1565b92915050565b6000602082840312156102f3576102f261027a565b5b6000610301848285016102c8565b91505092915050565b60008115159050919050565b61031f8161030a565b82525050565b600060208201905061033a6000830184610316565b92915050565b600060ff82169050919050565b61035681610340565b82525050565b6000602082019050610371600083018461034d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103b182610340565b91506103bc83610340565b92508260ff038211156103d2576103d1610377565b5b82820190509291505056fea2646970667358221220b25af33852675f0f7d00746ccb2e5b8fef29392125b6da0a9214a42117049cf864736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addAddressToWhitelist()": {
        "details": "- this function add the address of the sender to the whitelist"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "maxWhitelistedAddresses",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 11,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "whitelistedAddresses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 13,
        "contract": "contracts/WhiteList.sol:WhiteList",
        "label": "numAddressesWhitelisted",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}